(()=>{var i,w=new Uint8Array(16);function d(){if(!i&&(i=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!i))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return i(w)}var r=[];for(let n=0;n<256;++n)r.push((n+256).toString(16).slice(1));function h(n,e=0){return r[n[e+0]]+r[n[e+1]]+r[n[e+2]]+r[n[e+3]]+"-"+r[n[e+4]]+r[n[e+5]]+"-"+r[n[e+6]]+r[n[e+7]]+"-"+r[n[e+8]]+r[n[e+9]]+"-"+r[n[e+10]]+r[n[e+11]]+r[n[e+12]]+r[n[e+13]]+r[n[e+14]]+r[n[e+15]]}var v=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),l={randomUUID:v};function k(n,e,t){if(l.randomUUID&&!e&&!n)return l.randomUUID();n=n||{};let s=n.random||(n.rng||d)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,e){t=t||0;for(let o=0;o<16;++o)e[t+o]=s[o];return e}return h(s)}var c=k;var u=class{constructor(e){this.kafkaConfig=e||{brokers:["localhost:9092"],clientId:"azofly-client"},this.pendingRequests=new Map,this.responseHandlers=new Map,this.initKafkaClient(),this.startResponseListener()}initKafkaClient(){this.kafkaClient={sendMessage:async(e,t,s)=>(console.log(`[Kafka] \u53D1\u9001\u6D88\u606F\u5230\u4E3B\u9898 ${e}\uFF0C\u952E: ${t}`),await new Promise(o=>setTimeout(o,100)),!0),consumeMessages:(e,t)=>{console.log(`[Kafka] \u5F00\u59CB\u4ECE\u4E3B\u9898 ${e} \u6D88\u8D39\u6D88\u606F`)}}}async sendRequest(e,t={}){let s=c(),o={id:s,path:e,method:t.method||"GET",headers:t.headers||{},body:t.body?JSON.stringify(t.body):null,timestamp:Date.now()},f=new Promise((m,y)=>{this.pendingRequests.set(s,{resolve:m,reject:y}),setTimeout(()=>{if(this.pendingRequests.has(s)){let{reject:g}=this.pendingRequests.get(s);g(new Error("\u8BF7\u6C42\u8D85\u65F6")),this.pendingRequests.delete(s)}},t.timeout||3e4)});return await this.kafkaClient.sendMessage("azofly-ssr-requests",s,JSON.stringify(o)),f}registerResponseHandler(e,t){this.responseHandlers.set(e,t)}startResponseListener(){this.kafkaClient.consumeMessages("azofly-ssr-responses",e=>{try{let t=JSON.parse(e);if(t.requestId&&this.pendingRequests.has(t.requestId)){let{resolve:s,reject:o}=this.pendingRequests.get(t.requestId);t.error?o(new Error(t.error)):s(t),this.pendingRequests.delete(t.requestId)}else t.type&&this.responseHandlers.has(t.type)&&this.responseHandlers.get(t.type)(t)}catch(t){console.error("\u5904\u7406\u54CD\u5E94\u9519\u8BEF:",t)}})}},p=u;var a=class{constructor(e={}){var t,s;this.options={kafka:{brokers:((t=e.kafka)==null?void 0:t.brokers)||["localhost:9092"],clientId:((s=e.kafka)==null?void 0:s.clientId)||"azofly-client"},hydration:e.hydration!==!1,...e},this.bridge=new p(this.options.kafka),this.cache=new Map,this.init()}init(){this.options.hydration&&typeof window!="undefined"&&this.hydrate(),this.registerEventListeners(),console.log("Azofly \u5BA2\u6237\u7AEF\u521D\u59CB\u5316\u5B8C\u6210")}hydrate(){let e=window.__AZOFLY_INITIAL_STATE__||{};Object.entries(e).forEach(([t,s])=>{this.cache.set(t,s)}),console.log("Azofly \u5BA2\u6237\u7AEF\u5DF2\u4F7F\u7528\u521D\u59CB\u72B6\u6001\u6C34\u5408")}registerEventListeners(){typeof window!="undefined"&&(document.addEventListener("click",e=>{let t=e.target.closest("a");if(t&&t.href&&t.href.startsWith(window.location.origin)&&!t.hasAttribute("target")&&!t.hasAttribute("download")&&e.button===0&&!e.metaKey&&!e.ctrlKey){e.preventDefault();let s=new URL(t.href);this.navigate(s.pathname+s.search)}}),window.addEventListener("popstate",e=>{let{pathname:t,search:s}=window.location;this.navigate(t+s,{updateHistory:!1})}))}async navigate(e,t={}){try{console.log(`\u5BFC\u822A\u5230: ${e}`);let s={updateHistory:!0,...t},o=await this.bridge.sendRequest(e,{method:"GET",headers:{Accept:"text/html","X-Requested-With":"XMLHttpRequest"}});o.html&&(document.getElementById("app").innerHTML=o.html,s.updateHistory&&window.history.pushState({},"",e),this.cache.set(e,o.html),window.dispatchEvent(new CustomEvent("azofly:navigation",{detail:{path:e}})))}catch(s){console.error("\u5BFC\u822A\u9519\u8BEF:",s),window.dispatchEvent(new CustomEvent("azofly:error",{detail:{error:s,path:e}}))}}async fetchData(e,t={}){try{let s=await this.bridge.sendRequest(e,{method:t.method||"GET",headers:{"Content-Type":"application/json",Accept:"application/json",...t.headers||{}},body:t.body});return s.state?JSON.parse(s.state):null}catch(s){throw console.error("\u6570\u636E\u83B7\u53D6\u9519\u8BEF:",s),s}}},D=a;function M(n){return new a(n)}})();
//# sourceMappingURL=client.js.map
