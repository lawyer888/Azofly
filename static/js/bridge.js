(()=>{var i,f=new Uint8Array(16);function a(){if(!i&&(i=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!i))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return i(f)}var n=[];for(let s=0;s<256;++s)n.push((s+256).toString(16).slice(1));function p(s,e=0){return n[s[e+0]]+n[s[e+1]]+n[s[e+2]]+n[s[e+3]]+"-"+n[s[e+4]]+n[s[e+5]]+"-"+n[s[e+6]]+n[s[e+7]]+"-"+n[s[e+8]]+n[s[e+9]]+"-"+n[s[e+10]]+n[s[e+11]]+n[s[e+12]]+n[s[e+13]]+n[s[e+14]]+n[s[e+15]]}var y=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),d={randomUUID:y};function x(s,e,t){if(d.randomUUID&&!e&&!s)return d.randomUUID();s=s||{};let r=s.random||(s.rng||a)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){t=t||0;for(let o=0;o<16;++o)e[t+o]=r[o];return e}return p(r)}var u=x;var l=class{constructor(e){this.kafkaConfig=e||{brokers:["localhost:9092"],clientId:"azofly-client"},this.pendingRequests=new Map,this.responseHandlers=new Map,this.initKafkaClient(),this.startResponseListener()}initKafkaClient(){this.kafkaClient={sendMessage:async(e,t,r)=>(console.log(`[Kafka] \u53D1\u9001\u6D88\u606F\u5230\u4E3B\u9898 ${e}\uFF0C\u952E: ${t}`),await new Promise(o=>setTimeout(o,100)),!0),consumeMessages:(e,t)=>{console.log(`[Kafka] \u5F00\u59CB\u4ECE\u4E3B\u9898 ${e} \u6D88\u8D39\u6D88\u606F`)}}}async sendRequest(e,t={}){let r=u(),o={id:r,path:e,method:t.method||"GET",headers:t.headers||{},body:t.body?JSON.stringify(t.body):null,timestamp:Date.now()},c=new Promise((m,g)=>{this.pendingRequests.set(r,{resolve:m,reject:g}),setTimeout(()=>{if(this.pendingRequests.has(r)){let{reject:h}=this.pendingRequests.get(r);h(new Error("\u8BF7\u6C42\u8D85\u65F6")),this.pendingRequests.delete(r)}},t.timeout||3e4)});return await this.kafkaClient.sendMessage("azofly-ssr-requests",r,JSON.stringify(o)),c}registerResponseHandler(e,t){this.responseHandlers.set(e,t)}startResponseListener(){this.kafkaClient.consumeMessages("azofly-ssr-responses",e=>{try{let t=JSON.parse(e);if(t.requestId&&this.pendingRequests.has(t.requestId)){let{resolve:r,reject:o}=this.pendingRequests.get(t.requestId);t.error?o(new Error(t.error)):r(t),this.pendingRequests.delete(t.requestId)}else t.type&&this.responseHandlers.has(t.type)&&this.responseHandlers.get(t.type)(t)}catch(t){console.error("\u5904\u7406\u54CD\u5E94\u9519\u8BEF:",t)}})}},H=l;})();
//# sourceMappingURL=bridge.js.map
